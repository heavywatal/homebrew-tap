on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: brew-test

env:
  HOMEBREW_NO_ANALYTICS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  install-test-audit-style:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@main
      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-
      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems
      - name: Install packages
        continue-on-error: true
        run: |
          brew_install_test() { brew install "$1" && brew test -v "$1"; }
          brew_install_test cxxwtl
          brew_install_test clippson
          brew_install_test igraph32
          brew_install_test dart-sass
          brew_install_test last-bin
          brew_install_test pcg-cpp
          brew_install_test pcglite
          brew_install_test sfmt-class
          brew_install_test tumopp
          brew_install_test tekka
          brew_install_test tek2
      - name: Audit
        continue-on-error: true
        run: brew audit --strict --tap "$GITHUB_REPOSITORY"
      - name: Style
        continue-on-error: true
        run: brew style "$GITHUB_REPOSITORY"
